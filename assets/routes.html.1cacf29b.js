import{r as e,o,c as p,a as n,b as t,F as r,e as s,d as c}from"./app.9ab352e8.js";import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";const u={},i=n("h1",{id:"consuming-generated-routes",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#consuming-generated-routes","aria-hidden":"true"},"#"),s(" Consuming generated routes")],-1),d=n("p",null,[s("You have two options for how to tell tsoa where it can find the controllers that it will use to create the auto-generated "),n("code",null,"routes.ts"),s(" file.")],-1),k=n("h2",{id:"using-automatic-controllers-discovery",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#using-automatic-controllers-discovery","aria-hidden":"true"},"#"),s(" Using automatic controllers discovery")],-1),b=s("You can tell "),h=n("code",null,"tsoa",-1),m=s(" to use your automatic controllers discovery by providing a "),g={href:"http://www.globtester.com/",target:"_blank",rel:"noopener noreferrer"},y=s("minimatch glob"),_=s(" in the "),f={href:"https://github.com/lukeautry/tsoa/blob/master/src/config.ts",target:"_blank",rel:"noopener noreferrer"},w=s("config"),q=s(" file (e.g. "),v=n("code",null,"tsoa.json",-1),x=s("). It can be provided on "),P=n("code",null,"config.spec",-1),I=s(" or "),N=n("code",null,"config.routes",-1),j=s("."),C=c(`<p>Pros:</p><ul><li>New developers can add a controller without having to know how tsoa &quot;crawls&quot; for the controllers. As long as their controller is caught by the glob that you provide, the controller will be added to the OpenAPI documentation and to the auto-generated <code>routes.ts</code> file.</li></ul><p>Cons:</p><ul><li>It could be potentially slower (but not significantly slow) than the alternative option described further down in the readme.</li></ul><p>As you can see from the the controllers globs patterns below, you can provide multiple globs of various patterns:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;entryFile&quot;</span><span class="token operator">:</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;routes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;routesDir&quot;</span><span class="token operator">:</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;middleware&quot;</span><span class="token operator">:</span> <span class="token string">&quot;...&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;controllerPathGlobs&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">&quot;./dir-with-controllers/*&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;./recursive-dir/**/*&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;./custom-filerecursive-dir/**/*.controller.ts&quot;</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="manually-telling-tsoa-which-controllers-to-use-in-the-app-entry-file" tabindex="-1"><a class="header-anchor" href="#manually-telling-tsoa-which-controllers-to-use-in-the-app-entry-file" aria-hidden="true">#</a> Manually telling tsoa which controllers to use in the app entry file</h2><p>Tsoa can &quot;crawl&quot; the index file to look for controllers that have the <code>@Route</code> decorator.</p><p>Pros:</p><ul><li>The tsoa route generation will be faster.</li></ul><p>Cons:</p><ul><li>New developers on your team might add a controller and not understand why the new controller was not exposed to the router or to the OpenAPI generation. If this is a problem for you, please us the automatic controller discovery option described above.</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> methodOverride <span class="token keyword">from</span> <span class="token string">&quot;method-override&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> express <span class="token keyword">from</span> <span class="token string">&quot;express&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> bodyParser <span class="token keyword">from</span> <span class="token string">&quot;body-parser&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> RegisterRoutes <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./routes&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// ########################################################################</span>
<span class="token comment">// controllers need to be referenced in order to get crawled by the generator</span>
<span class="token keyword">import</span> <span class="token string">&quot;./users/usersController&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// ########################################################################</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">urlencoded</span><span class="token punctuation">(</span><span class="token punctuation">{</span> extended<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">methodOverride</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">RegisterRoutes</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>`,13);function R(A,O){const a=e("ExternalLinkIcon");return o(),p(r,null,[i,d,k,n("p",null,[b,h,m,n("a",g,[y,t(a)]),_,n("a",f,[w,t(a)]),q,v,x,P,I,N,j]),C],64)}var E=l(u,[["render",R]]);export{E as default};
