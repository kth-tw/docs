import{r as s,o as a,c as i,a as e,b as n,F as r,e as o,d as l}from"./app.9ab352e8.js";import{_ as c}from"./plugin-vue_export-helper.21dcd24c.js";const d={},h=e("h1",{id:"faq",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#faq","aria-hidden":"true"},"#"),o(" FAQ")],-1),p=e("h2",{id:"can-i-use-openapi-3-instead-of-openapi-2-formerly-swagger",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#can-i-use-openapi-3-instead-of-openapi-2-formerly-swagger","aria-hidden":"true"},"#"),o(" Can I use OpenAPI 3 instead of OpenAPI 2 (formerly Swagger)?")],-1),u=o("Yes, set "),m=e("code",null,"spec.specVersion",-1),_=o(" to "),f=e("code",null,"3",-1),g=o(" in your "),y=e("code",null,"tsoa.json",-1),b=o(" file. See more config options by looking at "),w={href:"https://github.com/lukeautry/tsoa/blob/master/src/config.ts",target:"_blank",rel:"noopener noreferrer"},k=o("the config type definition"),x=o("."),I=e("h2",{id:"how-to-ensure-no-additional-properties-come-in-at-runtime",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#how-to-ensure-no-additional-properties-come-in-at-runtime","aria-hidden":"true"},"#"),o(" How to ensure no additional properties come in at runtime")],-1),v=o("By default, OpenAPI allows for models to have "),A={href:"https://swagger.io/docs/specification/data-models/dictionaries/",target:"_blank",rel:"noopener noreferrer"},q=e("code",null,"additionalProperties",-1),S=o(". If you would like to ensure at runtime that the data has only the properties defined in your models, set the "),P=e("code",null,"noImplicitAdditionalProperties",-1),N=o(),O={href:"https://github.com/lukeautry/tsoa/blob/master/src/config.ts",target:"_blank",rel:"noopener noreferrer"},V=o("config"),B=o(" option to either "),C=e("code",null,'"silently-remove-extras"',-1),D=o(" or "),T=e("code",null,'"throw-on-extras"',-1),j=o(". Caveats:"),z=l(`<ul><li>The following types will always allow additional properties due to the nature of the way they work: <ul><li>The <code>any</code> type</li><li>An indexed type (which explicitly allows additional properties) like <code>export interface IStringToStringDictionary { [key: string] : string }</code></li></ul></li><li>If you are using tsoa for an existing service that has consumers... <ul><li>you will need to inform your consumers before setting <code>noImplicitAdditionalProperties</code> to <code>&quot;throw-on-extras&quot;</code> since it would be a breaking change (due to the fact that request bodies that previously worked would now get an error).</li></ul></li><li>Regardless, <code>&quot;noImplicitAdditionalProperties&quot; : &quot;silently-remove-extras&quot;</code> is a great choice for both legacy AND new APIs (since this mirrors the behavior of C# serializers and other popular JSON serializers).</li></ul><h2 id="dealing-with-duplicate-model-names" tabindex="-1"><a class="header-anchor" href="#dealing-with-duplicate-model-names" aria-hidden="true">#</a> Dealing with duplicate model names</h2><p>If you have multiple models with the same name, you may get errors indicating that there are multiple matching models. If you&#39;d like to designate a class/interface as the &#39;canonical&#39; version of a model, add a jsdoc element marking it as such:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@tsoaModel</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">MyModel</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="how-can-i-get-the-most-from-my-oas" tabindex="-1"><a class="header-anchor" href="#how-can-i-get-the-most-from-my-oas" aria-hidden="true">#</a> How can I get the most from my OAS?</h2>`,5),E=o("Now that you have a OpenAPI Specification (OAS) (swagger.json), you can use all kinds of amazing tools that generate documentation, client SDKs, and more "),F={href:"http://openapi.tools//",target:"_blank",rel:"noopener noreferrer"},M=o("here");function H(L,J){const t=s("ExternalLinkIcon");return a(),i(r,null,[h,p,e("p",null,[u,m,_,f,g,y,b,e("a",w,[k,n(t)]),x]),I,e("p",null,[v,e("a",A,[q,n(t)]),S,P,N,e("a",O,[V,n(t)]),B,C,D,T,j]),z,e("p",null,[E,e("a",F,[M,n(t)])])],64)}var R=c(d,[["render",H]]);export{R as default};
