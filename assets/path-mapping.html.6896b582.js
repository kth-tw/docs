import{r as e,o as p,c as o,a as s,b as t,F as r,e as n,d as c}from"./app.9ab352e8.js";import{_ as l}from"./plugin-vue_export-helper.21dcd24c.js";const i={},u=s("h3",{id:"path-mapping",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#path-mapping","aria-hidden":"true"},"#"),n(" Path mapping")],-1),m=n("Per the "),d={href:"https://www.typescriptlang.org/docs/handbook/basic-types.html",target:"_blank",rel:"noopener noreferrer"},b=n("TypeScript Handbook"),k=n(" under "),h={href:"https://www.typescriptlang.org/docs/handbook/module-resolution.html",target:"_blank",rel:"noopener noreferrer"},q=n("module resolution"),g=n(":"),y=c(`<blockquote><p>Sometimes modules are not directly located under baseUrl. For instance, an import to a module &quot;jquery&quot; would be translated at runtime to &quot;node_modules\\jquery\\dist\\jquery.slim.min.js&quot;. Loaders use a mapping configuration to map module names to files at run-time, see RequireJs documentation and SystemJS documentation.</p><p>The TypeScript compiler supports the declaration of such mappings using &quot;paths&quot; property in tsconfig.json files. Here is an example for how to specify the &quot;paths&quot; property for jquery.</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;baseUrl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span> <span class="token comment">// This must be specified if &quot;paths&quot; is.</span>
    <span class="token string-property property">&quot;paths&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string-property property">&quot;jquery&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;node_modules/jquery/dist/jquery&quot;</span><span class="token punctuation">]</span> <span class="token comment">// This mapping is relative to &quot;baseUrl&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>If you have a project that utilized this functionality, you can configure the internal generators to use the correct paths by providing a compilerOptions property to route configuration property in tsoa.json.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;spec&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;routes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
   <span class="token string-property property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;baseUrl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./path/to/base/url&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;paths&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;exampleLib&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./path/to/example/lib&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>`,4);function _(f,j){const a=e("ExternalLinkIcon");return p(),o(r,null,[u,s("p",null,[m,s("a",d,[b,t(a)]),k,s("a",h,[q,t(a)]),g]),y],64)}var w=l(i,[["render",_]]);export{w as default};
